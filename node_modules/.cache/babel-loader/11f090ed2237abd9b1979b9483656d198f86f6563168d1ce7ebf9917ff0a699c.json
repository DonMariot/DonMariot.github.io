{"ast":null,"code":"var _jsxFileName = \"/home/dom/Documents/Documents/PROJETCS/Web/dom_site/client/src/components/Competences.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { CProgress, CProgressBar, CButton } from '@coreui/react';\nimport '../css/Competences.css';\nimport Comp_pic from '../assets/images/competence.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Competences = () => {\n  _s();\n  const conceptionButtonRef = useRef(null);\n  const methodologieButtonRef = useRef(null);\n  const frontendButtonRef = useRef(null);\n  const backendButtonRef = useRef(null);\n  const [boutonSuivant, setBoutonSuivant] = useState(null);\n  const [simulationEnCours, setSimulationEnCours] = useState(true);\n  const [values, setValues] = useState([0, 0, 0, 0]);\n  const competenceNames = ['Design', 'Methodologie', 'Front-End', 'Back-End'];\n  useEffect(() => {\n    // Simuler un clic automatique sur le bouton \"Conception\" après le rendu initial\n    simulerClicAutomatique(conceptionButtonRef);\n  }, []);\n  useEffect(() => {\n    if (boutonSuivant && simulationEnCours) {\n      const timeoutId = setTimeout(() => {\n        simulerClicAutomatique(boutonSuivant);\n      }, 3000); // Délai en millisecondes entre les clics sur les boutons\n      return () => clearTimeout(timeoutId);\n    }\n  }, [boutonSuivant, simulationEnCours]);\n  const simulerClicAutomatique = buttonRef => {\n    if (buttonRef && buttonRef.current && simulationEnCours) {\n      buttonRef.current.dispatchEvent(new MouseEvent('click', {\n        bubbles: true\n      }));\n      // Ajouter la classe pour l'effet visuel\n      buttonRef.current.classList.add('button-clicked');\n      setTimeout(() => {\n        // Supprimer la classe après un court délai\n        buttonRef.current.classList.remove('button-clicked');\n      }, 3000); // Durée en millisecondes de l'effet visuel\n      // Définir le bouton suivant\n      switch (buttonRef) {\n        case conceptionButtonRef:\n          setValues([80, 0, 0, 0]);\n          setBoutonSuivant(methodologieButtonRef);\n          break;\n        case methodologieButtonRef:\n          setValues([0, 50, 0, 0]);\n          setBoutonSuivant(frontendButtonRef);\n          break;\n        case frontendButtonRef:\n          setValues([0, 0, 20, 0]);\n          setBoutonSuivant(backendButtonRef);\n          break;\n        case backendButtonRef:\n          setValues([0, 0, 0, 10]);\n          setBoutonSuivant(conceptionButtonRef);\n          break;\n        default:\n          setBoutonSuivant(null);\n          break;\n      }\n    }\n  };\n  const handleManualClick = () => {\n    setSimulationEnCours(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comp_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"comp_h2\",\n      children: \"Comp\\xE9tences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comp_comp\",\n      children: [/*#__PURE__*/_jsxDEV(CButton, {\n        ref: conceptionButtonRef,\n        onClick: handleManualClick,\n        color: \"light\",\n        variant: \"outline\",\n        children: \"Conception\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CButton, {\n        ref: methodologieButtonRef,\n        onClick: handleManualClick,\n        color: \"light\",\n        variant: \"outline\",\n        children: \"M\\xE9thodologie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CButton, {\n        ref: frontendButtonRef,\n        onClick: handleManualClick,\n        color: \"light\",\n        variant: \"outline\",\n        children: \"Front-End\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CButton, {\n        ref: backendButtonRef,\n        onClick: handleManualClick,\n        color: \"light\",\n        variant: \"outline\",\n        children: \"Back-End\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comp_item\",\n      children: values.map((value, index) => /*#__PURE__*/_jsxDEV(CProgress, {\n        className: \"comp_progress\",\n        value: value,\n        children: /*#__PURE__*/_jsxDEV(CProgressBar, {\n          children: competenceNames[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Comp_pic,\n      alt: \"pic_comp !\",\n      style: {\n        position: 'absolute',\n        top: '60%',\n        right: '28%',\n        transform: 'translateY(-60%)',\n        width: '25%',\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Competences, \"I1CaW7G7oxdAnlIaf8NjQpAP9kQ=\");\n_c = Competences;\nexport default Competences;\nvar _c;\n$RefreshReg$(_c, \"Competences\");","map":{"version":3,"names":["React","useRef","useEffect","useState","CProgress","CProgressBar","CButton","Comp_pic","jsxDEV","_jsxDEV","Competences","_s","conceptionButtonRef","methodologieButtonRef","frontendButtonRef","backendButtonRef","boutonSuivant","setBoutonSuivant","simulationEnCours","setSimulationEnCours","values","setValues","competenceNames","simulerClicAutomatique","timeoutId","setTimeout","clearTimeout","buttonRef","current","dispatchEvent","MouseEvent","bubbles","classList","add","remove","handleManualClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","color","variant","map","value","index","src","alt","style","position","top","right","transform","width","height","_c","$RefreshReg$"],"sources":["/home/dom/Documents/Documents/PROJETCS/Web/dom_site/client/src/components/Competences.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport {  CProgress, CProgressBar, CButton } from '@coreui/react'\nimport '../css/Competences.css';\nimport Comp_pic from '../assets/images/competence.png'\n\nconst Competences = () => {\n    const conceptionButtonRef = useRef(null);\n    const methodologieButtonRef = useRef(null);\n    const frontendButtonRef = useRef(null);\n    const backendButtonRef = useRef(null);\n    const [boutonSuivant, setBoutonSuivant] = useState(null);\n    const [simulationEnCours, setSimulationEnCours] = useState(true);\n    const [values, setValues] = useState([0, 0, 0, 0]);\n    const competenceNames = ['Design', 'Methodologie', 'Front-End', 'Back-End'];\n\n    useEffect(() => {\n        // Simuler un clic automatique sur le bouton \"Conception\" après le rendu initial\n      simulerClicAutomatique(conceptionButtonRef);\n    }, []); \n\n    useEffect(() => {\n      if (boutonSuivant && simulationEnCours) {\n        const timeoutId = setTimeout(() => {\n          simulerClicAutomatique(boutonSuivant);\n        }, 3000); // Délai en millisecondes entre les clics sur les boutons\n        return () => clearTimeout(timeoutId);\n      }\n    }, [boutonSuivant, simulationEnCours]);\n\n    const simulerClicAutomatique = (buttonRef) => {\n      if (buttonRef && buttonRef.current && simulationEnCours) {\n        buttonRef.current.dispatchEvent(new MouseEvent('click', { bubbles: true }));\n        // Ajouter la classe pour l'effet visuel\n        buttonRef.current.classList.add('button-clicked');\n        setTimeout(() => {\n          // Supprimer la classe après un court délai\n          buttonRef.current.classList.remove('button-clicked');\n        }, 3000); // Durée en millisecondes de l'effet visuel\n        // Définir le bouton suivant\n        switch (buttonRef) {\n            case conceptionButtonRef:\n              setValues([80, 0, 0, 0]);\n              setBoutonSuivant(methodologieButtonRef);\n              break;\n            case methodologieButtonRef:\n              setValues([0, 50, 0, 0]);\n              setBoutonSuivant(frontendButtonRef);\n              break;\n            case frontendButtonRef:\n              setValues([0, 0, 20, 0]);\n              setBoutonSuivant(backendButtonRef);\n              break;\n            case backendButtonRef:\n              setValues([0, 0, 0, 10]);\n              setBoutonSuivant(conceptionButtonRef); \n              break;\n            default:\n              setBoutonSuivant(null);\n              break;\n          }\n      }\n    };\n\n    const handleManualClick = () => {\n        setSimulationEnCours(true);\n    };\n\n    return (\n        <div className=\"comp_container\">\n            <h2 className=\"comp_h2\">Compétences</h2>\n            <div className='comp_comp'>\n                <CButton  \n                    ref={conceptionButtonRef} \n                    onClick={handleManualClick}  \n                    color=\"light\" \n                    variant=\"outline\">\n                        Conception\n                </CButton>\n                <CButton  \n                    ref={methodologieButtonRef} \n                    onClick={handleManualClick}  \n                    color=\"light\" \n                    variant=\"outline\">\n                        Méthodologie\n                </CButton>\n                <CButton  \n                    ref={frontendButtonRef} \n                    onClick={handleManualClick}  \n                    color=\"light\" \n                    variant=\"outline\">\n                        Front-End\n                </CButton>\n                <CButton  \n                    ref={backendButtonRef} \n                    onClick={handleManualClick} \n                    color=\"light\" \n                    variant=\"outline\">\n                        Back-End\n                </CButton>\n            </div>\n            <div className='comp_item'>\n                {values.map((value, index) => (\n                    <CProgress key={index} className=\"comp_progress\"  value={value}>\n                        <CProgressBar>{competenceNames[index]}</CProgressBar>\n                    </CProgress>\n                ))}\n            </div>\n            <img\n                src={Comp_pic}\n                alt=\"pic_comp !\"\n                style={{\n                position: 'absolute', \n                top: '60%',           \n                right: '28%',         \n                transform: 'translateY(-60%)', \n                width: '25%',      \n                height: 'auto',       \n                }}\n            />\n        </div>\n    );\n};\n\nexport default Competences;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAAUC,SAAS,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AACjE,OAAO,wBAAwB;AAC/B,OAAOC,QAAQ,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,mBAAmB,GAAGX,MAAM,CAAC,IAAI,CAAC;EACxC,MAAMY,qBAAqB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC1C,MAAMa,iBAAiB,GAAGb,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMc,gBAAgB,GAAGd,MAAM,CAAC,IAAI,CAAC;EACrC,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAMmB,eAAe,GAAG,CAAC,QAAQ,EAAE,cAAc,EAAE,WAAW,EAAE,UAAU,CAAC;EAE3EpB,SAAS,CAAC,MAAM;IACZ;IACFqB,sBAAsB,CAACX,mBAAmB,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACd,IAAIc,aAAa,IAAIE,iBAAiB,EAAE;MACtC,MAAMM,SAAS,GAAGC,UAAU,CAAC,MAAM;QACjCF,sBAAsB,CAACP,aAAa,CAAC;MACvC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACV,OAAO,MAAMU,YAAY,CAACF,SAAS,CAAC;IACtC;EACF,CAAC,EAAE,CAACR,aAAa,EAAEE,iBAAiB,CAAC,CAAC;EAEtC,MAAMK,sBAAsB,GAAII,SAAS,IAAK;IAC5C,IAAIA,SAAS,IAAIA,SAAS,CAACC,OAAO,IAAIV,iBAAiB,EAAE;MACvDS,SAAS,CAACC,OAAO,CAACC,aAAa,CAAC,IAAIC,UAAU,CAAC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC,CAAC;MAC3E;MACAJ,SAAS,CAACC,OAAO,CAACI,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;MACjDR,UAAU,CAAC,MAAM;QACf;QACAE,SAAS,CAACC,OAAO,CAACI,SAAS,CAACE,MAAM,CAAC,gBAAgB,CAAC;MACtD,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACV;MACA,QAAQP,SAAS;QACb,KAAKf,mBAAmB;UACtBS,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACxBJ,gBAAgB,CAACJ,qBAAqB,CAAC;UACvC;QACF,KAAKA,qBAAqB;UACxBQ,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACxBJ,gBAAgB,CAACH,iBAAiB,CAAC;UACnC;QACF,KAAKA,iBAAiB;UACpBO,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;UACxBJ,gBAAgB,CAACF,gBAAgB,CAAC;UAClC;QACF,KAAKA,gBAAgB;UACnBM,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;UACxBJ,gBAAgB,CAACL,mBAAmB,CAAC;UACrC;QACF;UACEK,gBAAgB,CAAC,IAAI,CAAC;UACtB;MACJ;IACJ;EACF,CAAC;EAED,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC5BhB,oBAAoB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,oBACIV,OAAA;IAAK2B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B5B,OAAA;MAAI2B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxChC,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtB5B,OAAA,CAACH,OAAO;QACJoC,GAAG,EAAE9B,mBAAoB;QACzB+B,OAAO,EAAER,iBAAkB;QAC3BS,KAAK,EAAC,OAAO;QACbC,OAAO,EAAC,SAAS;QAAAR,QAAA,EAAC;MAEtB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACVhC,OAAA,CAACH,OAAO;QACJoC,GAAG,EAAE7B,qBAAsB;QAC3B8B,OAAO,EAAER,iBAAkB;QAC3BS,KAAK,EAAC,OAAO;QACbC,OAAO,EAAC,SAAS;QAAAR,QAAA,EAAC;MAEtB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACVhC,OAAA,CAACH,OAAO;QACJoC,GAAG,EAAE5B,iBAAkB;QACvB6B,OAAO,EAAER,iBAAkB;QAC3BS,KAAK,EAAC,OAAO;QACbC,OAAO,EAAC,SAAS;QAAAR,QAAA,EAAC;MAEtB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACVhC,OAAA,CAACH,OAAO;QACJoC,GAAG,EAAE3B,gBAAiB;QACtB4B,OAAO,EAAER,iBAAkB;QAC3BS,KAAK,EAAC,OAAO;QACbC,OAAO,EAAC,SAAS;QAAAR,QAAA,EAAC;MAEtB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNhC,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBjB,MAAM,CAAC0B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBvC,OAAA,CAACL,SAAS;QAAagC,SAAS,EAAC,eAAe;QAAEW,KAAK,EAAEA,KAAM;QAAAV,QAAA,eAC3D5B,OAAA,CAACJ,YAAY;UAAAgC,QAAA,EAAEf,eAAe,CAAC0B,KAAK;QAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe;MAAC,GADzCO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNhC,OAAA;MACIwC,GAAG,EAAE1C,QAAS;MACd2C,GAAG,EAAC,YAAY;MAChBC,KAAK,EAAE;QACPC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,KAAK;QACVC,KAAK,EAAE,KAAK;QACZC,SAAS,EAAE,kBAAkB;QAC7BC,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE;MACR;IAAE;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC9B,EAAA,CApHID,WAAW;AAAAgD,EAAA,GAAXhD,WAAW;AAsHjB,eAAeA,WAAW;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}